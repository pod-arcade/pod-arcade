package api_test

import (
	"bytes"
	"testing"

	"github.com/pod-arcade/pod-arcade/api"
)

func TestGamepadInput_ToBytesAndFromBytes(t *testing.T) {
	tests := map[api.GamepadInput][]byte{
		{PadID: 1}:                  {4, 1, 0b00000000, 0b00000000, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
		{PadID: 1, North: true}:     {4, 1, 0b00000001, 0b00000000, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
		{PadID: 1, South: true}:     {4, 1, 0b00000010, 0b00000000, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
		{PadID: 1, West: true}:      {4, 1, 0b00000100, 0b00000000, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
		{PadID: 1, East: true}:      {4, 1, 0b00001000, 0b00000000, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
		{PadID: 1, L1: true}:        {4, 1, 0b00010000, 0b00000000, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
		{PadID: 1, R1: true}:        {4, 1, 0b00100000, 0b00000000, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
		{PadID: 1, LZ: true}:        {4, 1, 0b01000000, 0b00000000, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
		{PadID: 1, RZ: true}:        {4, 1, 0b10000000, 0b00000000, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
		{PadID: 1, Select: true}:    {4, 1, 0b00000000, 0b00000001, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
		{PadID: 1, Start: true}:     {4, 1, 0b00000000, 0b00000010, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
		{PadID: 1, DPadUp: true}:    {4, 1, 0b00000000, 0b00000100, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
		{PadID: 1, DPadDown: true}:  {4, 1, 0b00000000, 0b00001000, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
		{PadID: 1, DPadLeft: true}:  {4, 1, 0b00000000, 0b00010000, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
		{PadID: 1, DPadRight: true}: {4, 1, 0b00000000, 0b00100000, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
		{PadID: 1, Home: true}:      {4, 1, 0b00000000, 0b01000000, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
	}

	for k, v := range tests {
		if !bytes.Equal(k.ToBytes(), v) {
			t.Errorf("Expected %v, got %v", v, k.ToBytes())
		}
	}

	for k, v := range tests {
		inp := api.GamepadInput{}
		inp.FromBytes(v)
		if inp != k {
			t.Errorf("Expected %v, got %v", v, inp)
		}
	}
	//TODO test axis

}
